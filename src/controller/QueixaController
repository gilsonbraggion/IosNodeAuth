const bcrypt = require("bcryptjs");

const db = require("../db/dataBase");
const jwt = require("jsonwebtoken");
env = require("dotenv").config();

const {ApiError} = require("../error/CustomError");

exports.buscarTodos =  async (req, res) => {
      try {
        const [rows] = await db.execute("SELECT * FROM customers");
        res.status(200).json(rows); // Return JSON response
      } catch (error) {
        res.status(500).send(new ApiError('error', error.sqlMessage, error.sql, ""));
      }
};

exports.buscarTodos =  async (req, res) => {
  try {
    const [rows] = await db.execute("SELECT * FROM customers");
    res.status(200).json(rows); // Return JSON response
  } catch (error) {
    res.status(500).send(new ApiError('error', error.sqlMessage, error.sql, ""));
  }
};


// @Query("select e from Queixa e where e.removido = false order by e.nome ASC")
// List<Queixa> buscarAtivos();

// @Query("""
//     select pq from PacienteQueixas pq, Queixa q
//       where pq.paciente_id = :idPaciente
//       and pq.queixa_id = q.id
//       order by q.nome ASC
//     """)
// List<PacienteQueixas> buscarQueixasPorPaciente(@Param("idPaciente") String idPaciente);